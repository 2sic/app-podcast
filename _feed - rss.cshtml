@using Dynlist = System.Collections.Generic.IEnumerable<dynamic>;
@using System;
<?xml version="1.0" encoding="utf-8" ?>
@{
    // get all posts as delived from the standard query
    var episodes = Content.Parents("Episode") as Dynlist;
	
	/*  Just a note to anybody editing this file
	    The @Html.Raw("<link>") is necessary, because otherwise the
	    <link> tag gets parsed by Razor in an attempt to do something
	*/
}
@if(Request.QueryString["standalone"] == "true")
{
<rss version="2.0">
  <channel>
    <title>@Content.Title</title>
    <description>@Content.Description</description>
    <image>
      <url>@Content.Image</url>
    </image>
    <itunes:author>@Content.Owner[0].FullName</itunes:author>
    <creativeCommons:license>@Content.License[0].Link</creativeCommons:license>
    <language>@Content.Language</language>
    @Html.Raw("<link>" + Link.To() + "</link>")
    <guid>@Content.EntityGuid.ToString()</guid>
    <generator>2sxc PodCast App</generator>
    @foreach(var episode in episodes)
    {
      var duration = TimeSpan.FromMinutes(decimal.ToDouble(episode.Duration ?? 0));
      <item>
        <title>@episode.Title</title>
        <description>@episode.Description</description>
        <category>@Content.Category[0].Name</category>
        <pubDate>@episode.Date.ToString("R")</pubDate>
        <itunes:author>@episode.Author[0].FullName</itunes:author>
        <itunes:duration>@duration.ToString("hh\\:mm"):00</itunes:duration>
        <itunes:explicit>@(episode.Explicit ? "yes" : "no")</itunes:explicit>
        @Html.Raw("<link>" + Link.To() + "</link>")
        <guid>@episode.EntityGuid.ToString()</guid>
        <enclosure url="@episode.Audio" type="audio/mpeg" length="1024"></enclosure>
      </item>
    }
    
  </channel>
</rss>
}
else 
{
    <span>you are seeing this because you are currently viewing a normal page. to use this feed correctly, you must add ?standalone=true to the url, so it doesn't show dnn stuff or html. note that you can put the feed on an own page and then link to it <a href="@Link.To(parameters: "standalone=true")" target="_blank">(with ?standalone=true)</a> or you can also auto-use it by using the normal blog-page and where you would usually see things like /tag/something replace with /feed/all?standalone=true
    @Content.Toolbar
    </span>
}